<service name="tar_scm">
  <summary>Create a tar ball from SCM repository</summary>
  <description>This service uses a scm client to checkout or update from a given repository. Supported are svn, git, hg and bzr.</description>
  <param name="scm">
    <description>Used SCM</description>
    <allowedvalue>svn</allowedvalue>
    <allowedvalue>git</allowedvalue>
    <allowedvalue>hg</allowedvalue>
    <allowedvalue>bzr</allowedvalue>
    <required/>
  </param>
  <param name="url">
    <description>Checkout url</description>
    <required/>
  </param>
  <param name="subdir">
    <description>package just a sub directory</description>
  </param>
  <param name="version">
    <description>Specify version to be used in tarball. Defaults to automatically detected value formatted by versionformat parameter.</description>
  </param>
  <param name="versionformat">
    <description>
      Auto-generate version from checked out source using this format
      string.  This parameter is used if the 'version' parameter is not
      specified.

      For git, the value is passed to git log --date=short --pretty=format:...
      for the topmost commit, and the output from git is cleaned up to
      remove some unhelpful characters.  Here are some useful examples of
      strings which are expanded, see the git-log documentation for more.

      %ct             Commit time as a UNIX timestamp, e.g. 1384855776.
                      This is the default.

      %at             Author time as a UNIX timestamp, e.g. 1384855776.

      %cd             Commit date in YYYYMMDD format, e.g. 20131119

      %ad             Author date in YYYYMMDD format, e.g. 20131119

      %h              Abbreviated hash, e.g. cc62c54

      @PARENT_TAG@    the first tag that is reachable, e.g. v0.2.3

      @TAG_OFFSET@    the commit count since @PARENT_TAG@, if there is no
                      @PARENT_TAG@, will count since first commit, e.g. 18

      For hg, the value is passed to hg log --template=....  See the
      hg documentation for more information.  The default is '{rev}'

      For bzr and svn, '%r' is expanded to the revision, and is the default.
    </description>
  </param>
  <param name="versionprefix">
    <description>specify a base version as prefix.</description>
  </param>
  <param name="revision">
    <description>
       When using git, revision may refer to any of the following:

       * explicit SHA1: a1b2c3d4....
         - the SHA1 must be reachable from a default clone/fetch
           (generally, must be reachable from some branch or tag on the
           remote).
         - set by: git checkout ${SHA1}

       * short branch name: "master", "devel" etc.
         - set by: git checkout ${branch}
                   git pull

       * explicit ref: refs/heads/master, refs/tags/v1.2.3,
         refs/changes/49/11249/1
         - set by: git fetch ${url} ${revision}:${revision}
                   git checkout ${revision}
    </description>
  </param>
  <param name="filename">
    <description>name of package - used together with version to determine tarball name</description>
  </param>
  <param name="exclude">
    <description>for specifying excludes when creating the tar ball</description>
  </param>
  <param name="include">
    <description>for specifying subset of files/subdirectories to pack in the tar ball</description>
  </param>
  <param name="package-meta">
    <description>Package the meta data of SCM to allow the user or OBS to update after un-tar</description>
    <allowedvalue>yes</allowedvalue>
  </param>
  <param name="history-depth">
    <description>Stored history depth. Special value "full" clones/pulls full history. Only valid if SCM git is used.</description>
  </param>
  <param name="submodules">
    <description>Whether or not to include git submodules.  Default is 'enable'</description>
    <allowedvalue>enable</allowedvalue>
    <allowedvalue>disable</allowedvalue>
  </param>
  <param name="changesgenerate">
    <description>Whether or not to generate changes file entries from SCM commit log since a given parent revision (see changesrevision).  Default is 'disable'.</description>
    <allowedvalue>enable</allowedvalue>
    <allowedvalue>disable</allowedvalue>
  </param>
  <param name="changesauthor">
    <description>The author of the changes file entry to be written, defaults to first email entry in ~/.oscrc or "opensuse-packaging@opensuse.org" if there is no .oscrc found.</description>
  </param>
</service>
